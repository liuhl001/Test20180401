package com.winsion.inception.test;

import io.appium.java_client.AppiumDriver;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.android.AndroidElement;

import java.io.File;
import java.net.URL;
import java.util.Calendar;

import org.openqa.selenium.By;
import org.openqa.selenium.Capabilities;
import org.openqa.selenium.interactions.HasTouchScreen;
import org.openqa.selenium.interactions.TouchScreen;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteTouchScreen;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.testng.Assert;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import com.winsion.inception.bean.TrainCase;
import com.winsion.inception.dao.UserDaoImpl;
import com.winsion.inception.util.CaseUtil;
import com.winsion.inception.util.Util1;
import com.winsion.inception.util.Util2;

public class Register {

	private AppiumDriver<AndroidElement> driver;

	@BeforeTest
	public void setUp() throws Exception {

		driver = Util2.getdriver();
		Util1.toindex(driver);// 引导页
		Thread.sleep(500);
		Util2.register1(driver);
		
	}

	@AfterTest
	public void tearDown() throws Exception {

		driver.quit();
	}

	// 错误手机号，密码，验证码，注册失败
	@Test
	public void test1() throws InterruptedException {
		TrainCase tc = CaseUtil.getCaseByid("TI-1-012");

		register(tc.getPhone(), tc.getPwd(), tc.getCode());
		String result = Util2.getzhuce(driver);

		Assert.assertEquals(result, "注册");
	}

	// 空手机号，注册失败
	@Test
	public void test2() throws InterruptedException {

		TrainCase tc = CaseUtil.getCaseByid("TI-1-014");
		register(tc.getPhone(), tc.getPwd(), tc.getCode());

		String result = Util2.getzhuce(driver);

		Assert.assertEquals(result, "注册");
	}

	// 空密码，注册失败
	@Test
	public void test3() throws InterruptedException {

		TrainCase tc = CaseUtil.getCaseByid("TI-1-015");
		register(tc.getPhone(), tc.getPwd(), tc.getCode());
		String result = Util2.getzhuce(driver);

		Assert.assertEquals(result, "注册");
	}

	// 空验证码，注册失败
	@Test
	public void test4() throws InterruptedException {

		TrainCase tc = CaseUtil.getCaseByid("TI-1-016");
		register(tc.getPhone(), tc.getPwd(), tc.getCode());
		String result = Util2.getzhuce(driver);

		Assert.assertEquals(result, "注册");
	}

	// 注册成功
	// @Test
	public void test5() throws InterruptedException {
		TrainCase tc = CaseUtil.getCaseByid("TI-1-021");
		Util2.registerok(driver, tc.getPhone(), tc.getPwd());
		String result = Util2.getloginphone(driver);

		Assert.assertEquals(result, tc.getPhone());
	}

	// 退出
	// @Test
	public void test6() throws InterruptedException {
		Thread.sleep(2000);
		Util2.logout(driver);
		String result = Util2.getloginphone(driver);
		Assert.assertEquals(result, "未登录");
	}

	public void register(String phone, String pwd, String code)
			throws InterruptedException {

		driver.findElement(
				By.id("com.winsion.inception:id/et_user_center_phone")).clear();
		driver.findElement(By.id("com.winsion.inception:id/et_user_center_pwd"))
				.clear();// 密码

		driver.findElement(By.id("com.winsion.inception:id/et_msg_code"))
				.clear();

		driver.findElement(
				By.id("com.winsion.inception:id/et_user_center_phone"))
				.sendKeys(phone);// 用户名

		driver.findElement(By.id("com.winsion.inception:id/et_user_center_pwd"))
				.sendKeys(pwd);// 密码

		driver.findElement(By.id("com.winsion.inception:id/et_msg_code"))
				.sendKeys(code);// 验证码

		driver.findElement(By.id("com.winsion.inception:id/bt_user_center_reg"))
				.click();
		Thread.sleep(1000);
	}

}
