package com.winsion.inception.test;

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.TimeUnit;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.testng.Assert;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import com.winsion.inception.bean.TrainCase;
import com.winsion.inception.util.CaseUtil;

public class Trainstation {
	private WebDriver driver;
	private String baseUrl;
	private Properties properties = new Properties();
	static int n = 0;
	String key = "";
	static String time = new SimpleDateFormat("yyyy-MM-dd").format(Calendar
			.getInstance().getTime()); // 获取系统时间

	static Calendar now = Calendar.getInstance();
	static Calendar now2 = Calendar.getInstance();
	static {
		now.add(Calendar.DAY_OF_MONTH, +1);
		now2.add(Calendar.DAY_OF_MONTH, +2);

	}

	static String nexttime = new SimpleDateFormat("yyyy-MM-dd").format(now
			.getTime()); // 获取系统时间+1
	static String nexttime2 = new SimpleDateFormat("yyyy-MM-dd").format(now2
			.getTime()); // 获取系统时间+1

	// 昆明 起始站到达站都加1分钟，冷水江东到达站都加1分钟，

	public static String[][] chezhan = {

			{ "Z162", "已出发", "全程1小时19分钟", "晚点1分钟", "昆明", "曲靖", "21:12",
					"22:31", time, time },
			{ "Z162", "正在检票", "全程1小时24分钟", "正点", "宣威", "六盘水", "23:33", "00:57",
					time, time },
			{ "Z162", "停止检票", "全程2小时18分钟", "正点", "贵阳", "凯里", "04:23", "06:41",
					nexttime, nexttime },
			{ "Z162", "已出发", "全程1小时32分钟", "正点", "玉屏", "怀化", "08:58", "10:30",
					nexttime, nexttime },
			{ "Z162", "已到站", "全程58分钟", "晚点1分钟", "冷水江东", "娄底", "13:29", "14:28",
					nexttime, nexttime },
			{ "Z162", "正在候车", "全程1小时", "晚点未知", "湘潭", "长沙", "15:43", "16:43",
					nexttime, nexttime },
			{ "Z162", "停止检票", "全程2小时8分钟", "晚点1分钟", "岳阳", "武昌", "18:08",
					"20:16", nexttime, nexttime },
			{ "Z162", "已到站", "全程3小时15分钟", "晚点未知", "郑州", "石家庄", "01:00",
					"04:15", nexttime2, nexttime2 }

	};
/*
	public static String[] expecttrain = { "Z162", "已出发", "全程1小时19分钟", "晚点1分钟",
			"昆明", "曲靖", "21:12", "22:31", time, time };
*/
	@BeforeTest
	public void dylc() {

		System.setProperty("webdriver.chrome.driver", "chromedriver.exe");
		driver = new ChromeDriver();

		baseUrl = "http://172.16.5.25:10011/login.html";

		driver.manage().window().maximize();//

	}

	// 查找
	@Test
	public void teststatue() throws InterruptedException {

		List<TrainCase> testcase=CaseUtil.getCases();
		System.out.println(testcase.size());
		for (int i = 0; i < testcase.size(); i++) {
			TrainCase tc=testcase.get(i);
			int startf = login(tc.getTrainnum(), tc.getStartstation());// 始发站

			if (startf == 0) {
				if (tc.getKystatue().equals("已出发")) {
					getzt1("已出发");
					zwd(tc.getKytime());// 正晚点
				} else if (tc.getKystatue().equals("已到站")) {
					getzt1("正在候车");
					zwd(tc.getKytime());// 正晚点
				} else {
					getzt1(tc.getKystatue());
					zwd(tc.getKytime());// 正晚点
				}
				getzt3(tc.getHcs(),tc.getJpk());//候车室，检票口

			}

			int endf = login(tc.getTrainnum(),tc.getEndstation());// 到达站
			if (endf == 0) {
				if (tc.getKystatue().equals("已出发")) {
					getzt1("正在候车");
					zwd(tc.getKytime());// 正晚点时间
				} else if (tc.getKystatue().equals("已到站")) {
					getzt1("已到站");
					zwd(tc.getKytime()); // 正晚点
				} else {
					getzt1(tc.getKystatue());// 客运状态
				}
	
				getzt3(tc.getHcs(),tc.getJpk());//候车室，检票口
			}
		}
		Thread.sleep(1000);

	}

	public void zwd(String kytime) throws InterruptedException {
		if (kytime.trim().equals("正点")) {
			getzt2("0");// 客运时刻
		} else if (kytime.trim().equals("晚点未知")) {
			getzt2("-1");// 客运时刻
		} else if (kytime.contains("晚点")) {
			String regEx = "[^0-9]";
			Pattern p = Pattern.compile(regEx);
			Matcher m = p.matcher(kytime);
			getzt2(m.replaceAll("").trim());
			System.out.println("@#" + m.replaceAll("").trim());
		}
	}

	public int login(String tainnum, String chezhan)
			throws InterruptedException {
		int f = -1;
		driver.get(baseUrl);
		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		driver.findElement(By.id("user")).sendKeys(chezhan);
		driver.findElement(By.id("pwd")).sendKeys("123");

		driver.findElement(By.cssSelector("span")).click();
		Thread.sleep(2000);
		driver.findElement(By.id("SearchInput")).sendKeys(tainnum);// 车次

		driver.findElement(By.xpath("//div[@class='PassengerSerSearch']/span"))
				.click();// 搜索
		Thread.sleep(2000);
		/*
		
		List<WebElement> dates = driver
				.findElements(By
						.xpath("//div[@id='ScrollBoxLeft']/div/ol/li/div/div/span[2]/span"));
		for (int i = 0; i < dates.size(); i++) {

			String date = dates.get(i).getText().trim(); // 获取日期

			if (time.equals(date)) { // 修改选择日期
				System.out.println("===========");
				driver.findElements(
						By.xpath("//div[@id='ScrollBoxLeft']/div/ol/li/div/div/span[2]/span"))
						.get(i).click();// 点击今日 的 数据
				f = 0;
				break;
			}
		}*/

		
		
		driver.findElement(By.xpath("//div[@id='ScrollBoxLeft']/div/ol/li/div/div")).click();//点击今日 的 数据
		Thread.sleep(1000);
		return 0;

	}

	// 客运状态
	public void getzt1(String tainstatue) throws InterruptedException {

		Actions action = new Actions(driver);
		action.dragAndDropBy(driver.findElement(By
				.xpath("//div[@class='slider-track']/div[2]")), -1000, 0);
		action.perform();
		if (tainstatue.trim().equals("正在候车")) {
			action.dragAndDropBy(driver.findElement(By
					.xpath("//div[@class='slider-track']/div[2]")), 0, 0);
		} else if (tainstatue.trim().equals("正在检票")) {
			action.dragAndDropBy(driver.findElement(By
					.xpath("//div[@class='slider-track']/div[2]")), 250, 0);
		} else if (tainstatue.trim().equals("停止检票")) {
			action.dragAndDropBy(driver.findElement(By
					.xpath("//div[@class='slider-track']/div[2]")), 500, 0);
		} else if (tainstatue.trim().equals("已出发")) {
			action.dragAndDropBy(driver.findElement(By
					.xpath("//div[@class='slider-track']/div[2]")), 700, 0);
		} else if (tainstatue.trim().equals("已到站")) {
			action.dragAndDropBy(driver.findElement(By
					.xpath("//div[@class='slider-track']/div[2]")), 1000, 0);
		}

		action.perform();
		action.release();

		Thread.sleep(1000);
		driver.findElements(By.className("PassengerSerHandleBtn")).get(1)
				.click();// 保存
		Thread.sleep(1000);
		alertok();
		Thread.sleep(1000);
	}

	/**
	 * 客运时刻
	 * 
	 * @throws InterruptedException
	 */
	public void getzt2(String delaytime) throws InterruptedException {

		if (delaytime.trim().equals("-1")) {

			driver.findElement(
					By.xpath("//section[@class='PassengerSerTransportTime']/div[2]/ul/li/ul/li[2]/div/div[3]"))
					.click();// 晚点未定
		} else {
			driver.findElement(By.id("delayTime")).clear();

			driver.findElement(By.id("delayTime")).sendKeys(delaytime.trim());
		}
		Thread.sleep(1000);
		driver.findElements(By.className("PassengerSerHandleBtn")).get(3)
				.click();// 保存

		Thread.sleep(1000);
		alertok();
	}

	/**
	 * 车站布局
	 * 
	 * @throws InterruptedException
	 */

	public void getzt3(String hcs,String jpk) throws InterruptedException {
		Actions action2 = new Actions(driver);
		for (int j = 0; j < 6; j++) {

			action2.sendKeys(Keys.TAB);// 模拟按下并释放 TAB 键

		}
		action2.perform();
		action2.release();
		Thread.sleep(2000);
		WebElement h1=driver.findElement(
				By.xpath("//div[@class='LayoutOfStation']/ul/li/ul/li/ol/li[1]/span"));
	
		WebElement h2=driver.findElement(
				By.xpath("//div[@class='LayoutOfStation']/ul/li/ul/li/ol/li[2]/span"));
		
		if(h1.getAttribute("class").contains("danger")){
			h1.click();			
		}
		if(h2.getAttribute("class").contains("danger")){
			h2.click();			
		}	

		driver.findElement(
				By.xpath("//div[@class='LayoutOfStation']/ul/li/ul/li/ol/li["+hcs+"]/span")).click();
				// 候车室2

		Thread.sleep(1000);
	WebElement j1=	driver.findElement(
				By.xpath("//div[@class='LayoutOfStation']/ul/li/ul/li[2]/ol/li[1]/span"));
	WebElement j2=	driver.findElement(
			By.xpath("//div[@class='LayoutOfStation']/ul/li/ul/li[2]/ol/li[2]/span"));	
		if(j1.getAttribute("class").contains("danger")){
			j1.click();			
		}
		if(j2.getAttribute("class").contains("danger")){		
			j2.click();			
		}	

		driver.findElement(
				By.xpath("//div[@class='LayoutOfStation']/ul/li/ul/li[2]/ol/li["+jpk+"]/span"))
				.click();// 检票口2

		driver.findElements(By.className("PassengerSerHandleBtn")).get(5)
				.click();
		Thread.sleep(1000);
		alertok();
	}

	public void alertok() throws InterruptedException {
		Thread.sleep(2000);

		Alert alert = driver.switchTo().alert();
		alert.accept();// 确认
		Thread.sleep(1000);
	}

	@AfterTest
	public void afend() {
		System.out.println("测试结束2");
		driver.close();

		driver.quit();

	}
}
